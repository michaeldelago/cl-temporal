// Copyright 2012 Google LLC
//
// Use of this source code is governed by an MIT-style
// license that can be found in the LICENSE file or at
// https://opensource.org/licenses/MIT.

syntax = "proto2";

import "package_test2.proto"; // Test proto

package protobuf_package_unittest1;

message MessageDefinedInBothPackages {
  optional string boom = 1;
}

message MessageWithCrossPackageReference {
  optional protobuf_package_unittest2.MessageInOtherPackage baz = 1;
  optional protobuf_package_unittest2.EnumInOtherPackage bonk = 2;
  optional MessageDefinedInBothPackages bam = 3;
  optional protobuf_package_unittest2.MessageDefinedInBothPackages bing = 5;
}

message MessageWithCrossPackageExtension {
  extend protobuf_package_unittest2.MessageInOtherPackage {
    optional int32 baa = 1000;
  }
  optional protobuf_package_unittest2.MessageInOtherPackage boo = 1;
}

service ServiceWithCrossPackageInputOutput {
  rpc Bloop(protobuf_package_unittest2.MessageInOtherPackage) returns (MessageWithCrossPackageReference);
  rpc Beep(MessageWithCrossPackageReference) returns (protobuf_package_unittest2.MessageInOtherPackage);
}


// These are "camel-spitting" names.
message Record2fLookupRequest {}
message Record2fLookupResponse {}

service ServiceWithCamelSpittingInputOutput {
  rpc Record2fLookup(Record2fLookupRequest) returns (Record2fLookupResponse);
}
